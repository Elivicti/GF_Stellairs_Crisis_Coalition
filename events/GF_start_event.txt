namespace = GF_start

event = {
	id = GF_start.0
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		set_global_flag = GF_Stellairs_Crisis_Coalition_Installed
	}
}

country_event = {
	id = GF_start.1
	title = GF_start.1.name
	desc = GF_start.1.desc
	
	picture = {
		picture = GFX_evt_GF_URNC_flag
		trigger = { has_valid_civic = GF_civic_URNC }
	}
	picture = {
		picture = GFX_evt_GF_AU_flag
		trigger = { has_valid_civic = GF_civic_AU }
	}
	picture = {
		picture = GFX_evt_GF_GK_flag
		trigger = { has_valid_civic = GF_civic_GK }
	}

	is_triggered_only = yes
	trigger = {
		has_origin = GF_origin_commonwealth
	}

	immediate = {
		set_global_flag = GF_Stellairs_Crisis_Coalition_Enabled

		# Inititalize country's basic characteristics
		give_technology = { message = no tech = tech_powered_exoskeletons }
		give_technology = { message = no tech = GF_tech_doll_assemble }
		switch = {
			trigger = has_valid_civic
			GF_civic_URNC = {
				give_technology = { message = no tech = GF_tech_observe_reflection }
			}
			GF_civic_AU = {
				give_technology = { message = no tech = GF_tech_observe_reflection }
				give_technology = { message = no tech = GF_tech_mass_rebuild_function }
			}
			GF_civic_GK = {
				set_country_flag = community_mod_rules_trigger
				set_country_flag = community_can_build_branch_offices_true
				set_country_flag = community_can_support_branch_offices_false
			}
		}

		# Add special deposits
		capital_scope = {
			save_global_event_target_as = GF_home_world
			clear_deposits = yes
			planet_event = { id = GF_start.10 }
		}

		# Set ruler basic characteristics
		random_owned_species = {
			limit = { is_archetype = GF_ANDROID }
			save_event_target_as = GF_doll_species
		}
		every_owned_leader = {
			limit = { leader_class = ruler }
			remove_trait = trait_ruler_corvette_focus
			remove_trait = trait_ruler_destroyer_focus
			remove_trait = trait_ruler_cruiser_focus
			remove_trait = trait_ruler_battleship_focus
			remove_trait = trait_ruler_recruiter
			remove_trait = trait_ruler_from_the_ranks
			remove_trait = trait_ruler_fortifier
			remove_trait = trait_ruler_logistic_understanding
			remove_trait = trait_ruler_military_pioneer
			remove_trait = trait_ruler_warlike
			remove_trait = trait_ruler_architectural_sense
			remove_trait = trait_ruler_frontier_spirit
			remove_trait = trait_ruler_world_shaper
			remove_trait = trait_ruler_home_in_the_sky
			remove_trait = trait_ruler_industrialist
			remove_trait = trait_ruler_eye_for_talent
			remove_trait = trait_ruler_deep_connections
			remove_trait = trait_ruler_charismatic
			remove_trait = trait_ruler_champion_of_the_people
			remove_trait = trait_ruler_expansionist
			remove_trait = trait_ruler_fertility_preacher
			remove_trait = trait_ruler_investor
			remove_trait = trait_ruler_space_miner
			remove_trait = trait_ruler_explorer
			remove_trait = leader_trait_fleet_organizer
			remove_trait = leader_trait_reformer
			remove_trait = leader_trait_ruler_erudite
		}
		every_owned_leader = {
			limit = { leader_class = ruler }
			change_species = event_target:GF_doll_species
			add_trait = GF_trait_leader_ogas
			set_leader_flag = flag_GF_ogas_leader
			save_global_event_target_as = GF_ogas_leader
		}
	}

	option = {
		name = GF_start.1.a
		hidden_effect = {
			country_event = { id = GF_ogas.100 days = 5 }
			# 设置人形权利
			every_owned_species = {
				limit = { has_trait = GF_trait_doll }
				set_citizenship_type = {
					country = root
					type = citizenship_robot_servitude
					cooldown = yes
				}
			}
			
			country_event = { id = GF_elid.0 days = 30 } # initialize elid attack events
		}
	}
}

planet_event = {
	id = GF_start.10
	hide_window = yes

	is_triggered_only = yes
	trigger = {
		owner = { has_origin = GF_origin_commonwealth }
	}

	immediate = {
		add_deposit = d_GF_south_pole_energy
		add_deposit = d_GF_south_pole_mineral
		add_deposit = d_GF_black_zone
		add_deposit = d_GF_red_zone
		add_deposit = d_GF_yellow_zone
		add_deposit = d_GF_green_zone
		add_deposit = d_GF_white_zone
		add_deposit = d_GF_doll_factory_ruin
		add_deposit = d_GF_south_asia_food
		add_deposit = d_GF_amazon_food
		add_deposit = d_GF_australia_ruin
		add_deposit = d_GF_asia_europe_factory
		add_deposit = d_GF_relic_preservation
		add_deposit = d_GF_purify_wall
		add_deposit = d_GF_south_pole_urban
		add_deposit = d_GF_railway_hub
		set_variable = {
			which = v_GF_armored_train_capacity
			value = 2
		}
	}
}

planet_event = {
	id = GF_start.20
	hide_window = yes

	is_triggered_only = yes
	trigger = {
		owner = { has_origin = GF_origin_commonwealth }
	}

	immediate = {
		# Add second species
		last_created_species = {
			set_species_flag = flag_GF_doll_species_@root.owner
			set_species_flag = community_mod_rules_trigger
			set_species_flag = community_can_species_be_assembled_true	# 物种可组装
			set_species_flag = community_can_species_procreate_false	# 物种不可生殖
			set_species_flag = community_can_crossbreed_species_false	# 物种不可杂交

		}
		while = {
			count = 14
			# replace pops instead of create new pops
			random_owned_pop = {
				limit = { NOT = { is_same_species = last_created_species } }
				change_species = last_created_species

				set_pop_flag = community_mod_rules_trigger
				set_pop_flag = community_can_fill_ruler_job_false		# 人口不可成为统治者 
				set_pop_flag = community_can_fill_specialist_job_false	# 人口不可成为专家
				set_pop_flag = community_can_generate_leader_from_pop_false
				set_pop_flag = community_can_generate_military_leader_from_pop_false
			}
		}
		while = {
			count = 2
			create_pop = { species = owner_main_species }
		}
	}
}