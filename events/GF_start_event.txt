namespace = GF_start

event = {
	id = GF_start.0
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		set_global_flag = GF_Stellairs_Crisis_Coalition_Installed
		event_target:global_event_country = {
			set_variable = {
				which = v_GF_Stellaris_MOD_VER
				value = @GF_Stellaris_MOD_VER
			}
		}
		every_country = {
			limit = { has_origin = GF_origin_commonwealth }
			if = {
				limit = { NOT = { has_global_flag = GF_Stellairs_Crisis_Coalition_Enabled } }
				set_country_flag = flag_GF_main_country
			}
			fire_on_action = { on_action = on_GF_game_start }
		}
	}
}

country_event = {
	id = GF_start.1
	title = GF_start.1.name
	desc = GF_start.1.desc
	
	picture = {
		picture = GFX_evt_GF_URNC_flag
		trigger = { has_valid_civic = GF_civic_URNC }
	}
	picture = {
		picture = GFX_evt_GF_AU_flag
		trigger = { has_valid_civic = GF_civic_AU }
	}
	picture = {
		picture = GFX_evt_GF_GK_flag
		trigger = { has_valid_civic = GF_civic_GK }
	}

	is_triggered_only = yes
	trigger = {
		has_origin = GF_origin_commonwealth
		NOT = { has_global_flag = GF_Stellairs_Crisis_Coalition_Enabled }
	}

	immediate = {
		# set_country_flag = flag_GF_main_country
		set_global_flag = GF_Stellairs_Crisis_Coalition_Enabled
		add_resource = { gf_core_chip = 100 }

		# Inititalize country's basic characteristics
		set_country_flag = suppress_vanilla_factions	# 禁用原版派系
		give_technology = { message = no tech = tech_powered_exoskeletons }
		give_technology = { message = no tech = GF_tech_doll_assemble }
		switch = {
			trigger = has_valid_civic
			GF_civic_URNC = {
				give_technology = { message = no tech = GF_tech_observe_reflection }
			}
			GF_civic_AU = {
				give_technology = { message = no tech = GF_tech_observe_reflection }
				give_technology = { message = no tech = GF_tech_mass_rebuild_function }
			}
			GF_civic_GK = { }
		}

		# Add special deposits
		capital_scope = {
			save_global_event_target_as = GF_home_world
			set_planet_flag = flag_p_GF_home_world
			set_planet_flag = suppress_archaeological_sites
			clear_deposits = yes
			planet_event = { id = GF_start.10 }
		}

		# Create OGAS country
		create_country = {
			name = "NAME_GF_OGAS"
			type = GF_ogas_country_type
			flag = {
				icon = {
					category = "griffin"
					file = "country_gf_ogas.dds"
				}
				background = {
					category = "backgrounds"
					file = "sinus.dds"
				}
				colors = {
					"black"
					"black"
					"null"
					"null"
				}
			}
			effect = {
				set_country_flag = flag_GF_ogas_country
				save_global_event_target_as = GF_ogas_country
			}
		}
		event_target:GF_ogas_country = { establish_communications_no_message = prev }
		save_global_event_target_as = GF_ogas_owner
		set_country_flag = flag_GF_can_contact_OGAS
		set_country_flag = flag_GF_ogas_owner

		# Set ruler basic characteristics
		random_owned_species = {
			limit = { is_archetype = GF_ANDROID }
			save_event_target_as = GF_doll_species
		}
		ruler = {
			save_event_target_as = old_ruler
		}
		event_target:GF_ogas_country = {
			clone_leader = {
				target = prev.ruler
				species = event_target:GF_doll_species
				event_leader = yes

				skip_background_generation = yes
				background_ethic = ethic_materialist
				custom_description = GF_ogas_leader_desc

				effect = {
					remove_trait = GF_trait_leader_doll
					copy_flags_and_variables_from = prev.ruler
					add_trait_no_notify = GF_trait_leader_ogas
					set_leader_flag = legendary_leader				# 传奇领袖
					set_leader_flag = immune_to_negative_traits		# 免疫负面特质
					set_leader_flag = leader_death_events_blocked	# 禁止原版死亡事件
					set_leader_flag = flag_GF_ogas_leader
					set_leader_flag = has_gained_level_trait
					save_global_event_target_as = GF_ogas_leader
					if = {
						limit = { owner_main_species = { NOT = { is_species_class = GF_new_type } } }
						change_leader_portrait = GF_doll_000
					}
				}
			}
		}
		event_target:GF_ogas_leader = { set_owner = prev }

		assign_leader = event_target:GF_ogas_leader
		clear_custom_ruler_and_heir_titles = yes
		event_target:old_ruler = {
			kill_leader = { show_notification = no }
		}

		# events
		country_event = { id = GF_ogas.110	 days =  5 }
		country_event = { id = GF_elid.0	 days = 30 } # initialize elid attack events
		country_event = { id = GF_factions.0 days = 16 }
	}

	option = {
		name = GF_start.1.a
		hidden_effect = {
			every_owned_species = {
				if = {
					limit = { has_trait = GF_trait_doll }
					# 设置人形权利
					set_citizenship_type = {
						country = root
						type = citizenship_robot_servitude
						cooldown = yes
					}
				}
				else = { set_species_flag = flag_GF_GAVIRUL_species }
			}
			ruler = { change_background_job = none }
		}
	}
}

country_event = {
	id = GF_start.2
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_origin = GF_origin_commonwealth
		has_global_flag = GF_Stellairs_Crisis_Coalition_Enabled
		NOT = { has_country_flag = flag_GF_main_country }
	}

	immediate = {
		set_origin = origin_default
		create_species = {
			class = HUM
			portrait = random
			homeworld = capital_scope
			name = random
			adjective = random
			name_list = HUMAN1
			traits = {
				trait = trait_adaptive
				trait = trait_nomadic
				trait = trait_wasteful
			}
			effect = {
				save_event_target_as = target_species
			}
		}
		every_owned_pop = { change_species = event_target:target_species }
		every_owned_leader = { change_species = event_target:target_species }
		change_dominant_species = {
			species = event_target:target_species
			change_all = yes
		}
		ruler = {
			change_leader_portrait = event_target:target_species
			remove_trait = GF_trait_leader_ogas
			remove_leader_flag = flag_GF_ogas_leader
			remove_leader_flag = has_gained_level_trait
		}
		while = {
			count = 2
			random_owned_pop = { kill_pop = yes }
		}
		change_government = random
		remove_country_flag = human_1
		capital_scope = {
			remove_planet_flag = planet_earth
			solar_system = {
				remove_star_flag = sol_system
				remove_star_flag = sol
			}
		}
	}
}

planet_event = {
	id = GF_start.10
	hide_window = yes

	is_triggered_only = yes
	trigger = {
		owner = { has_origin = GF_origin_commonwealth }
	}

	immediate = {
		add_deposit = d_GF_south_pole_energy
		add_deposit = d_GF_south_pole_mineral
		add_deposit = d_GF_black_zone
		add_deposit = d_GF_red_zone
		add_deposit = d_GF_yellow_zone
		add_deposit = d_GF_green_zone
		add_deposit = d_GF_white_zone
		add_deposit = d_GF_doll_factory_ruin
		add_deposit = d_GF_south_asia_food
		add_deposit = d_GF_amazon_food
		add_deposit = d_GF_australia_ruin
		add_deposit = d_GF_asia_europe_factory
		add_deposit = d_GF_relic_preservation
		add_deposit = d_GF_purify_wall
		add_deposit = d_GF_south_pole_urban
		add_deposit = d_GF_railway_hub
		set_variable = {
			which = v_GF_armored_train_capacity
			value = 2
		}

		add_district = district_industrial
		add_district = district_mining

		remove_building = building_commercial_zone
		add_building = building_GF_42lab_1
	}
}

planet_event = {
	id = GF_start.20
	hide_window = yes

	is_triggered_only = yes
	trigger = {
		owner = { has_origin = GF_origin_commonwealth }
	}

	immediate = {
		# Add second species
		last_created_species = {
			set_species_flag = flag_GF_doll_species_@root.owner
		}
		while = {
			count = 14
			# replace pops instead of create new pops
			random_owned_pop = {
				limit = { NOT = { is_same_species = last_created_species } }
				change_species = last_created_species
			}
		}
		while = {
			count = 2
			create_pop = { species = owner_main_species }
		}
	}
}